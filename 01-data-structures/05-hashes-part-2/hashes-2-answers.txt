1. Describe three collision resolution strategies not mentioned here.

  Coalesced hashing
  A hybrid of chaining and open addressing, coalesced hashing links together
  chains of nodes within the table itself. Like open addressing, it achieves
  space usage and (somewhat diminished) cache advantages over chaining. Like
  chaining, it does not exhibit clustering effects; in fact, the table can be
  efficiently filled to a high density. Unlike chaining, it cannot have more
  elements than table slots.

  Hopscotch hashing
  The hopscotch hashing algorithm works by defining a neighborhood of buckets
  near the original hashed bucket, where a given entry is always found. Thus,
  search is limited to the number of entries in this neighborhood, which is
  logarithmic in the worst case, constant on average, and with proper alignment
  of the neighborhood typically requires one cache miss. When inserting an
  entry, one first attempts to add it to a bucket in the neighborhood. However,
  if all buckets in this neighborhood are occupied, the algorithm traverses
  buckets in sequence until an open slot (an unoccupied bucket) is found (as in
  linear probing). At that point, since the empty bucket is outside the
  neighborhood, items are repeatedly displaced in a sequence of hops. Each hop
  brings the open slot closer to the original neighborhood, without invalidating
  the neighborhood property of any of the buckets along the way. In the end, the
  open slot has been moved into the neighborhood, and the entry being inserted
  can be added to it.

  Robin Hood hashing
  The idea is that a new key may displace a key already inserted, if its probe
  count is larger than that of the key at the current position. The net effect
  of this is that it reduces worst case search times in the table. This is
  similar to ordered hash tables except that the criterion for bumping a key
  does not depend on a direct relationship between the keys. Since both the
  worst case and the variation in the number of probes is reduced dramatically,
  an interesting variation is to probe the table starting at the expected
  successful probe value and then expand from that position in both directions.
  External Robin Hood hashing is an extension of this algorithm where the table
  is stored in an external file and each table position corresponds to a
  fixed-sized page or bucket with B records.

2. Create your own collision resolution strategy and describe how it works.
  I might use something like linear probing but assigning the key to a random
  index instead of the next available index.
